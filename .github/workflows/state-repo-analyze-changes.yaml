name: State repo analyze changes
on:
  workflow_call:
    inputs:
      path:
        required: true
        type: string

jobs:
  linter-and-validate-release-coherence:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Calculate changes
        id: calculate_changes
        uses: dorny/paths-filter@v3
        with:
          list-files: json
          filters: |
            changed:
              - '${{ inputs.path }}/**/*.yaml'
              - '${{ inputs.path }}/**/*.yml'
      - name: View context attributes
        uses: actions/github-script@v7
        with:
          script: |
            const path = require("path");
            const fs = require("fs");

            const changedFiles = JSON.parse(${{ toJson(steps.calculate_changes.outputs.changed_files) }});
            
            console.debug(changedFiles);

            const ignoredDirectories = [".github", ".docs"];
            const ignoredFiles = ["helmfile.yaml"];

            const changedEnvironments = {};

            changedFiles.forEach( f => {
  
              const pathComponents = path.normalize(f).split(path.sep)

              if(ignoredDirectories.includes(pathComponents[0])) return;
              if(ignoredFiles.includes(pathComponents.at(-1))) return;

              const [kind, tenant, app, file] =  pathComponents;

              let env;

              if(fs.lstatSync(f).isDirectory()) {
                env = file;
              } else {
                env = path.parse(file).name;
              }
              
              const changedAppInfo = [kind, tenant, app].join("/");

              if (!Array.isArray(changedEnvironments[env])) changedEnvironments[env] = [];
              if (!changedEnvironments[env].includes(changedAppInfo)) changedEnvironments[env].push(changedAppInfo);

              console.log("kind: " + kind + " tenant " + tenant + " app " + app  + " env " + env);
            });

            console.log(changedEnvironments);

            return changedEnvironments;